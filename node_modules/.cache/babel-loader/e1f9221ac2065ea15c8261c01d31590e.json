{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\src\\components\\base\\BaseModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\src\\components\\base\\BaseModal.vue","mtime":1666968705821},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\babel.config.js","mtime":1666968674908},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666968684658},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1666968703001},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\babel-loader\\lib\\index.js","mtime":1666968682927},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666968684658},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\vue-loader\\lib\\index.js","mtime":1666968703727}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9NZXNzYWdlMiBmcm9tICJlbGVtZW50LXVpL2xpYi90aGVtZS1jaGFsay9tZXNzYWdlLmNzcyI7CmltcG9ydCAiZWxlbWVudC11aS9saWIvdGhlbWUtY2hhbGsvYmFzZS5jc3MiOwppbXBvcnQgX01lc3NhZ2UgZnJvbSAiZWxlbWVudC11aS9saWIvbWVzc2FnZSI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIkM6L1VzZXJzL0FkbWluaXN0cmF0b3IvRGVza3RvcC9cdTc1MzVcdTU1NDZcdTdCQTFcdTc0MDYvYmFja2dyb3VuZC1tYW5hZ2Utc3lzdGVtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiQzovVXNlcnMvQWRtaW5pc3RyYXRvci9EZXNrdG9wL1x1NzUzNVx1NTU0Nlx1N0JBMVx1NzQwNi9iYWNrZ3JvdW5kLW1hbmFnZS1zeXN0ZW0vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3JlZ2VuZXJhdG9yUnVudGltZS5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJDOi9Vc2Vycy9BZG1pbmlzdHJhdG9yL0Rlc2t0b3AvXHU3NTM1XHU1NTQ2XHU3QkExXHU3NDA2L2JhY2tncm91bmQtbWFuYWdlLXN5c3RlbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50ZXN0LmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHN0b3JlIGZyb20gInN0b3JlIjsKaW1wb3J0IE1PREFMX0ZPUk1fREFUQSBmcm9tICdAL2NvbmZpZy9tb2RhbEZvcm0uY29uZmlnJzsKaW1wb3J0IFZBTElEQVRFX0RBVEEgZnJvbSAnQC9jb25maWcvdmFsaWRhdGUuY29uZmlnJzsKaW1wb3J0IEJhc2VGb3JtIGZyb20gImNvbXBvbmVudHMvYmFzZS9CYXNlRm9ybSI7CmltcG9ydCB7IGR5bmFtaWNSb3V0ZXMgfSBmcm9tICJAL3JvdXRlci9pbmRleCI7CmltcG9ydCB7IGNyZWF0ZU5hbWVzcGFjZWRIZWxwZXJzIH0gZnJvbSAndnVleCc7Cgp2YXIgX2NyZWF0ZU5hbWVzcGFjZWRIZWxwID0gY3JlYXRlTmFtZXNwYWNlZEhlbHBlcnMoJ21vZGFsJyksCiAgICBtYXBTdGF0ZSA9IF9jcmVhdGVOYW1lc3BhY2VkSGVscC5tYXBTdGF0ZSwKICAgIG1hcEFjdGlvbnMgPSBfY3JlYXRlTmFtZXNwYWNlZEhlbHAubWFwQWN0aW9uczsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQmFzZU1vZGFsJywKICBjb21wb25lbnRzOiB7CiAgICBCYXNlRm9ybTogQmFzZUZvcm0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmb3JtOiB7fSwKICAgICAgc2VsZWN0T3B0aW9uczoge30sCiAgICAgIGNhdGVnb3J5TGlzdDogW10sCiAgICAgIGZpcnN0Q2F0ZWdvcnk6IFtdLAogICAgICBzZWNvbmRDYXRlZ29yeTogW10sCiAgICAgIHRoaXJkQ2F0ZWdvcnk6IFtdLAogICAgICByb2xlTGlzdDogW10sCiAgICAgIGF4aW9zUmVzdWx0OiB7fSwKICAgICAgcHJvZHVjdEZvcm1EYXRhOiBuZXcgRm9ybURhdGEoKQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuJGJ1cy4kb24oJ3RyYW5zbWl0Rm9ybURhdGEnLCBmdW5jdGlvbiAoZGF0YSkgewogICAgICBfdGhpcy5mb3JtID0gZGF0YTsKICAgIH0pOwogICAgdGhpcy4kYnVzLiRvbignZm9ybWF0U2VsZWN0T3B0aW9ucycsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIF90aGlzLmZvcm1hdFNlbGVjdE9wdGlvbnMoZGF0YSB8fCBfdGhpcy5jYXRlZ29yeUxpc3QpOwogICAgfSk7CiAgfSwKICB3YXRjaDogewogICAgdHlwZTogZnVuY3Rpb24gdHlwZShfdHlwZSkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJlc3VsdCwgX3Jlc3VsdDsKCiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWYgKCFfdHlwZS5pbmNsdWRlcygnVXNlcicpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuJGF4aW9zKCdnZXRSb2xlTGlzdCcpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXN1bHQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX3RoaXMyLnJvbGVMaXN0ID0gcmVzdWx0LmRhdGEucm9sZUxpc3Q7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIGlmICghWydhZGRQcm9kdWN0JywgJ2VkaXRQcm9kdWN0J10uaW5jbHVkZXMoX3R5cGUpKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDg7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLiRheGlvcygnZ2V0UHJvZHVjdHNDYXRlZ29yeScpOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfcmVzdWx0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzMi5jYXRlZ29yeUxpc3QgPSBfcmVzdWx0LmRhdGEucmVzdWx0OwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGlzU2hvdzogZnVuY3Rpb24gaXNTaG93KHZhbCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIGlmICghdmFsKSB7CiAgICAgICAgdGhpcy4kYnVzLiRvbignZm9ybWF0U2VsZWN0T3B0aW9ucycsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICBfdGhpczMuZm9ybWF0U2VsZWN0T3B0aW9ucyhkYXRhIHx8IF90aGlzMy5jYXRlZ29yeUxpc3QpOwogICAgICAgIH0pOwogICAgICAgIHZhciB0cmVlOwoKICAgICAgICBpZiAodGhpcy50eXBlLmluY2x1ZGVzKCdSb2xlJykpIHsKICAgICAgICAgIHRyZWUgPSB0aGlzLiRyZWZzWydmb3JtJ10uJHJlZnNbJ3RyZWUnXVswXTsKICAgICAgICAgIHRyZWUuc2V0Q2hlY2tlZEtleXMoW10pOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5mb3JtID0ge307CiAgICAgICAgdGhpcy4kYnVzLiRvbigndHJhbnNtaXRGb3JtRGF0YScsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICBfdGhpczMuZm9ybSA9IGRhdGE7CiAgICAgICAgICBpZiAodHJlZSkgdHJlZS5zZXRDaGVja2VkS2V5cyhkYXRhLnJvbGVBdXRoKTsKICAgICAgICB9KTsKICAgICAgICB0aGlzLnByb2R1Y3RGb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpOwogICAgICAgIGlmICh0aGlzLnR5cGUuaW5jbHVkZXMoImFkZFByb2R1Y3QiKSkgdGhpcy4kcmVmc1siZm9ybSJdLiRyZWZzWyJ1cGxvYWQiXVswXS51cGxvYWRGaWxlcyA9IFtdOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJGJ1cy4kb2ZmKCd0cmFuc21pdEZvcm1EYXRhJyk7CiAgICAgICAgdGhpcy4kYnVzLiRvZmYoJ2Zvcm1hdFNlbGVjdE9wdGlvbnMnKTsKICAgICAgfQogICAgfSwKICAgIGZvcm06IHsKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcihuZXdWYWwpIHsKICAgICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgICAgaWYgKHRoaXMuJHJvdXRlLnBhdGggPT09ICIvcHJvZHVjdHNjbGFzc2lmeSIpIHsKICAgICAgICAgIHZhciBleGlzdEZpcnN0Q2F0ZWdvcnkgPSB0aGlzLmZpcnN0Q2F0ZWdvcnkuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgIHJldHVybiBpdGVtLmNhdGVnb3J5TmFtZSA9PT0gX3RoaXM0LmZvcm0uZmlyc3RDYXRlZ29yeTsKICAgICAgICAgIH0pOwoKICAgICAgICAgIGlmIChleGlzdEZpcnN0Q2F0ZWdvcnkubGVuZ3RoID09PSAwKSB7CiAgICAgICAgICAgIHRoaXMuc2Vjb25kQ2F0ZWdvcnkgPSBbXTsKICAgICAgICAgICAgdGhpcy50aGlyZENhdGVnb3J5ID0gW107CiAgICAgICAgICB9CgogICAgICAgICAgdGhpcy5jYXRlZ29yeUxpc3QuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgIGlmIChuZXdWYWwuZmlyc3RDYXRlZ29yeSA9PT0gaXRlbS5jYXRlZ29yeU5hbWUpIHsKICAgICAgICAgICAgICBfdGhpczQuc2Vjb25kQ2F0ZWdvcnkgPSBpdGVtLmNoaWxkLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBjdXJyKSB7CiAgICAgICAgICAgICAgICBhY2MucHVzaCh7CiAgICAgICAgICAgICAgICAgIGNhdGVnb3J5TmFtZTogY3Vyci5jYXRlZ29yeU5hbWUsCiAgICAgICAgICAgICAgICAgIGlkOiBjdXJyID09PSBudWxsIHx8IGN1cnIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGN1cnIuaWQsCiAgICAgICAgICAgICAgICAgIHJvb3ROYW1lOiBjdXJyID09PSBudWxsIHx8IGN1cnIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGN1cnIucm9vdE5hbWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgcmV0dXJuIGFjYzsKICAgICAgICAgICAgICB9LCBbXSk7CgogICAgICAgICAgICAgIGlmIChuZXdWYWwuc2Vjb25kQ2F0ZWdvcnkpIHsKICAgICAgICAgICAgICAgIGl0ZW0uY2hpbGQuZmlsdGVyKGZ1bmN0aW9uIChjaGlsZHJlbikgewogICAgICAgICAgICAgICAgICBpZiAobmV3VmFsLnNlY29uZENhdGVnb3J5ID09PSBjaGlsZHJlbi5jYXRlZ29yeU5hbWUpIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczQudGhpcmRDYXRlZ29yeSA9IGNoaWxkcmVuLmNoaWxkLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBjdXJyKSB7CiAgICAgICAgICAgICAgICAgICAgICBhY2MucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgICAgIGNhdGVnb3J5TmFtZTogY3Vyci5jYXRlZ29yeU5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBjdXJyID09PSBudWxsIHx8IGN1cnIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGN1cnIuaWQsCiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudE5hbWU6IGN1cnIgPT09IG51bGwgfHwgY3VyciA9PT0gdm9pZCAwID8gdm9pZCAwIDogY3Vyci5wYXJlbnROYW1lCiAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhY2M7CiAgICAgICAgICAgICAgICAgICAgfSwgW10pOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgICAgdGhpcy5zZWxlY3RPcHRpb25zID0gewogICAgICAgICAgICBmaXJzdENhdGVnb3J5OiB0aGlzLmZpcnN0Q2F0ZWdvcnksCiAgICAgICAgICAgIHNlY29uZENhdGVnb3J5OiB0aGlzLnNlY29uZENhdGVnb3J5LAogICAgICAgICAgICB0aGlyZENhdGVnb3J5OiB0aGlzLnRoaXJkQ2F0ZWdvcnkKICAgICAgICAgIH07CiAgICAgICAgfQogICAgICB9LAogICAgICBkZWVwOiB0cnVlCiAgICB9LAogICAgc2Vjb25kQ2F0ZWdvcnk6IGZ1bmN0aW9uIHNlY29uZENhdGVnb3J5KG5ld1ZhbCwgb2xkVmFsKSB7CiAgICAgIHZhciBfbmV3VmFsJCwKICAgICAgICAgIF9vbGRWYWwkLAogICAgICAgICAgX3RoaXM1ID0gdGhpczsKCiAgICAgIGlmICgoKF9uZXdWYWwkID0gbmV3VmFsWzBdKSA9PT0gbnVsbCB8fCBfbmV3VmFsJCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX25ld1ZhbCQucm9vdE5hbWUpICE9PSAoKF9vbGRWYWwkID0gb2xkVmFsWzBdKSA9PT0gbnVsbCB8fCBfb2xkVmFsJCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX29sZFZhbCQucm9vdE5hbWUpICYmIHRoaXMuZm9ybS5zZWNvbmRDYXRlZ29yeSkgewogICAgICAgIHRoaXMuZm9ybS5zZWNvbmRDYXRlZ29yeSA9ICIiOwogICAgICAgIGlmICh0aGlzLmZvcm0udGhpcmRDYXRlZ29yeSkgdGhpcy5mb3JtLnRoaXJkQ2F0ZWdvcnkgPSAiIjsKICAgICAgfQoKICAgICAgdmFyIGV4aXN0Rmlyc3RDYXRlZ29yeSA9IHRoaXMuZmlyc3RDYXRlZ29yeS5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS5jYXRlZ29yeU5hbWUgPT09IF90aGlzNS5mb3JtLmZpcnN0Q2F0ZWdvcnk7CiAgICAgIH0pOwogICAgICB2YXIgZXhpc3RTZWNvbmRDYXRlb3J5ID0gb2xkVmFsLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLmNhdGVnb3J5TmFtZSA9PT0gX3RoaXM1LmZvcm0uc2Vjb25kQ2F0ZWdvcnk7CiAgICAgIH0pOwogICAgICBpZiAoZXhpc3RGaXJzdENhdGVnb3J5Lmxlbmd0aCA+IDAgJiYgZXhpc3RTZWNvbmRDYXRlb3J5Lmxlbmd0aCA9PT0gMCAmJiB0aGlzLmZvcm0uc2Vjb25kQ2F0ZWdvcnkpIHRoaXMudGhpcmRDYXRlZ29yeSA9IFtdOwogICAgfSwKICAgIHRoaXJkQ2F0ZWdvcnk6IGZ1bmN0aW9uIHRoaXJkQ2F0ZWdvcnkobmV3VmFsLCBvbGRWYWwpIHsKICAgICAgdmFyIF9uZXdWYWwkMiwgX29sZFZhbCQyOwoKICAgICAgaWYgKCgoX25ld1ZhbCQyID0gbmV3VmFsWzBdKSA9PT0gbnVsbCB8fCBfbmV3VmFsJDIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9uZXdWYWwkMi5wYXJlbnROYW1lKSAhPT0gKChfb2xkVmFsJDIgPSBvbGRWYWxbMF0pID09PSBudWxsIHx8IF9vbGRWYWwkMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX29sZFZhbCQyLnBhcmVudE5hbWUpICYmIHRoaXMuZm9ybS50aGlyZENhdGVnb3J5KSB0aGlzLmZvcm0udGhpcmRDYXRlZ29yeSA9ICIiOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoWydpc1Nob3cnLCAndHlwZSddKSksIHt9LCB7CiAgICB0aXRsZTogZnVuY3Rpb24gdGl0bGUoKSB7CiAgICAgIHZhciBfTU9EQUxfRk9STV9EQVRBJHRoaXM7CgogICAgICByZXR1cm4gKF9NT0RBTF9GT1JNX0RBVEEkdGhpcyA9IE1PREFMX0ZPUk1fREFUQVt0aGlzLnR5cGVdKSA9PT0gbnVsbCB8fCBfTU9EQUxfRk9STV9EQVRBJHRoaXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9NT0RBTF9GT1JNX0RBVEEkdGhpcy50aXRsZTsKICAgIH0sCiAgICB0cmVlRGF0YTogZnVuY3Rpb24gdHJlZURhdGEoKSB7CiAgICAgIHJldHVybiB0aGlzLmZvcm1hdFRyZWVEYXRhKGR5bmFtaWNSb3V0ZXMpOwogICAgfSwKICAgIHJ1bGVzOiBmdW5jdGlvbiBydWxlcygpIHsKICAgICAgcmV0dXJuIFZBTElEQVRFX0RBVEE7CiAgICB9LAogICAgbW9kYWxGb3JtRGF0YTogZnVuY3Rpb24gbW9kYWxGb3JtRGF0YSgpIHsKICAgICAgdmFyIF9NT0RBTF9GT1JNX0RBVEEkdGhpczI7CgogICAgICByZXR1cm4gKF9NT0RBTF9GT1JNX0RBVEEkdGhpczIgPSBNT0RBTF9GT1JNX0RBVEFbdGhpcy50eXBlXSkgPT09IG51bGwgfHwgX01PREFMX0ZPUk1fREFUQSR0aGlzMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX01PREFMX0ZPUk1fREFUQSR0aGlzMi5jaGlsZHJlbjsKICAgIH0sCiAgICB0b2tlbjogZnVuY3Rpb24gdG9rZW4oKSB7CiAgICAgIHZhciBfc3RvcmUkZ2V0OwoKICAgICAgcmV0dXJuIChfc3RvcmUkZ2V0ID0gc3RvcmUuZ2V0KHByb2Nlc3MuZW52LlZVRV9BUFBfVVNFUl9JTkZPKSkgPT09IG51bGwgfHwgX3N0b3JlJGdldCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3N0b3JlJGdldC50b2tlbjsKICAgIH0KICB9KSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKHsKICAgIHN1Ym1pdDogZnVuY3Rpb24gc3VibWl0KCkgewogICAgICB2YXIgX3RoaXM2ID0gdGhpczsKCiAgICAgIGlmICh0aGlzLnR5cGUuaW5jbHVkZXMoJ1JvbGUnKSkgewogICAgICAgIHZhciB0cmVlID0gdGhpcy4kcmVmc1snZm9ybSddLiRyZWZzWyd0cmVlJ11bMF07CiAgICAgICAgdmFyIGNoZWNrZWRLZXlzID0gdHJlZS5nZXRDaGVja2VkS2V5cygpOwogICAgICAgIHRoaXMuJHJlZnNbJ2Zvcm0nXS5mb3JtLnJvbGVBdXRoID0gY2hlY2tlZEtleXM7CiAgICAgIH0KCiAgICAgIHRoaXMuJHJlZnNbJ2Zvcm0nXS4kcmVmc1sndmFsaWRhdGVGb3JtJ10udmFsaWRhdGUoIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKHZhbGlkKSB7CiAgICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICBpZiAoIXZhbGlkKSB7CiAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyMzsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxOwoKICAgICAgICAgICAgICAgICAgaWYgKCFbImFkZFByb2R1Y3QiXS5pbmNsdWRlcyhfdGhpczYudHlwZSkpIHsKICAgICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDc7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNi5oYW5kbGVVcGxvYWRSZXF1ZXN0KCk7CgogICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gOTsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNi4kYXhpb3MoX3RoaXM2LnR5cGUsIF90aGlzNi4kcmVmc1snZm9ybSddLmZvcm0pOwoKICAgICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgICAgX3RoaXM2LmF4aW9zUmVzdWx0ID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgICAgaWYgKF90aGlzNi5heGlvc1Jlc3VsdCkgewogICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBmYWxzZSk7CgogICAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgICAgX3RoaXM2LiRidXMuJGVtaXQoJ2NoYW5nZURhdGEnLCBfdGhpczYuYXhpb3NSZXN1bHQuZGF0YS5yZXN1bHQpOwoKICAgICAgICAgICAgICAgICAgX3RoaXM2LiRidXMuJGVtaXQoJ3RyYW5zbWl0Rm9ybURhdGEnLCBfdGhpczYuYXhpb3NSZXN1bHQuZGF0YS5yZXN1bHQpOwoKICAgICAgICAgICAgICAgICAgaWYgKF90aGlzNi50eXBlID09PSAiYWRkUHJvZHVjdHNDYXRlZ29yeSIpIF90aGlzNi5mb3JtYXRTZWxlY3RPcHRpb25zKF90aGlzNi5jYXRlZ29yeUxpc3QpOwoKICAgICAgICAgICAgICAgICAgX3RoaXM2LmNsb3NlKCk7CgogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDIxOwogICAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDE4OwogICAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0Mi50MCk7CgogICAgICAgICAgICAgICAgY2FzZSAyMToKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyNDsKICAgICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgICAgY2FzZSAyMzoKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIGZhbHNlKTsKCiAgICAgICAgICAgICAgICBjYXNlIDI0OgogICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1sxLCAxOF1dKTsKICAgICAgICB9KSk7CgogICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgICAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgfTsKICAgICAgfSgpKTsKICAgIH0sCiAgICBmb3JtYXRTZWxlY3RPcHRpb25zOiBmdW5jdGlvbiBmb3JtYXRTZWxlY3RPcHRpb25zKGRhdGEpIHsKICAgICAgdGhpcy5jYXRlZ29yeUxpc3QgPSBkYXRhOwogICAgICB0aGlzLmZpcnN0Q2F0ZWdvcnkgPSBkYXRhLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBjdXJyKSB7CiAgICAgICAgYWNjLnB1c2goewogICAgICAgICAgY2F0ZWdvcnlOYW1lOiBjdXJyLmNhdGVnb3J5TmFtZSwKICAgICAgICAgIGlkOiBjdXJyID09PSBudWxsIHx8IGN1cnIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGN1cnIuaWQKICAgICAgICB9KTsKICAgICAgICByZXR1cm4gYWNjOwogICAgICB9LCBbXSk7CiAgICAgIHRoaXMuc2VsZWN0T3B0aW9ucyA9IHsKICAgICAgICBmaXJzdENhdGVnb3J5OiB0aGlzLmZpcnN0Q2F0ZWdvcnksCiAgICAgICAgc2Vjb25kQ2F0ZWdvcnk6IHRoaXMuc2Vjb25kQ2F0ZWdvcnksCiAgICAgICAgdGhpcmRDYXRlZ29yeTogdGhpcy50aGlyZENhdGVnb3J5CiAgICAgIH07CiAgICB9LAogICAgZm9ybWF0VHJlZURhdGE6IGZ1bmN0aW9uIGZvcm1hdFRyZWVEYXRhKGRhdGFzKSB7CiAgICAgIHZhciBfdGhpczcgPSB0aGlzOwoKICAgICAgcmV0dXJuIGRhdGFzLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIGlmICghaXRlbS5jaGlsZHJlbikgewogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgaWQ6IGl0ZW0ubWV0YS5pZCwKICAgICAgICAgICAgbmFtZTogaXRlbS5uYW1lCiAgICAgICAgICB9OwogICAgICAgIH0KCiAgICAgICAgaWYgKGl0ZW0uY2hpbGRyZW4pIHsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGlkOiBpdGVtLm1ldGEuaWQsCiAgICAgICAgICAgIG5hbWU6IGl0ZW0ubmFtZSwKICAgICAgICAgICAgY2hpbGRyZW46IF90aGlzNy5mb3JtYXRUcmVlRGF0YShpdGVtLmNoaWxkcmVuKQogICAgICAgICAgfTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZVVwbG9hZENoYW5nZTogZnVuY3Rpb24gaGFuZGxlVXBsb2FkQ2hhbmdlKGZpbGUpIHsKICAgICAgdmFyIG1heFNpemUgPSA1ICogMTAyNCAqIDEwMjQ7CgogICAgICBpZiAoZmlsZS5zaXplID4gbWF4U2l6ZSkgewogICAgICAgIF9NZXNzYWdlKHsKICAgICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwKICAgICAgICAgIG1lc3NhZ2U6ICLmlofku7bkuI3lvpflpKfkuo41TSIKICAgICAgICB9KTsKCiAgICAgICAgdGhpcy4kcmVmc1siZm9ybSJdLiRyZWZzWyJ1cGxvYWQiXVswXS5oYW5kbGVSZW1vdmUoZmlsZSk7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CgogICAgICBpZiAoIS9pbWFnZS9nLnRlc3QoZmlsZS5yYXcudHlwZSkpIHsKICAgICAgICBfTWVzc2FnZSh7CiAgICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgICAgICBtZXNzYWdlOiAi5Y+q6IO96YCJ5oup5Zu+54mH5qC85byP55qE5paH5Lu2IgogICAgICAgIH0pOwoKICAgICAgICB0aGlzLiRyZWZzWyJmb3JtIl0uJHJlZnNbInVwbG9hZCJdWzBdLmhhbmRsZVJlbW92ZShmaWxlKTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIHRoaXMucHJvZHVjdEZvcm1EYXRhLmFwcGVuZCgiZmlsZSIsIGZpbGUucmF3KTsKICAgIH0sCiAgICBoYW5kbGVVcGxvYWRSZXF1ZXN0OiBmdW5jdGlvbiBoYW5kbGVVcGxvYWRSZXF1ZXN0KCkgewogICAgICB2YXIgX3RoaXM4ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBrZXk7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGZvciAoa2V5IGluIF90aGlzOC4kcmVmc1snZm9ybSddLmZvcm0pIHsKICAgICAgICAgICAgICAgICAgX3RoaXM4LnByb2R1Y3RGb3JtRGF0YS5hcHBlbmQoa2V5LCBfdGhpczguJHJlZnNbJ2Zvcm0nXS5mb3JtW2tleV0pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczguJGF4aW9zKF90aGlzOC50eXBlLCBfdGhpczgucHJvZHVjdEZvcm1EYXRhKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgX3RoaXM4LmF4aW9zUmVzdWx0ID0gX2NvbnRleHQzLnNlbnQ7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGNsb3NlTW9kYWw6IGZ1bmN0aW9uIGNsb3NlTW9kYWwoKSB7CiAgICAgIHRoaXMuJGJ1cy4kZW1pdCgiaW5pdFRhYmxlRGF0YSIpOwogICAgICB0aGlzLmNsb3NlKCk7CiAgICB9CiAgfSwgbWFwQWN0aW9ucyhbJ2Nsb3NlJ10pKSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkge30KfTs="},{"version":3,"mappings":"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","names":["name","components","BaseForm","data","form","selectOptions","categoryList","firstCategory","secondCategory","thirdCategory","roleList","axiosResult","productFormData","created","watch","type","result","isShow","val","tree","handler","acc","categoryName","id","rootName","item","parentName","deep","newVal","oldVal","computed","mapState","title","treeData","rules","modalFormData","token","methods","submit","valid","console","formatSelectOptions","formatTreeData","datas","children","handleUploadChange","file","message","handleUploadRequest","closeModal","mapActions","beforeDestroy"],"sourceRoot":"src/components/base","sources":["BaseModal.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-dialog class=\"dialogModal\"\r\n               :title=\"title\"\r\n               :show-close=\"false\"\r\n               :visible=\"isShow\">\r\n      <BaseForm :type=\"type\"\r\n                :form='form'\r\n                :treeData=\"treeData\"\r\n                :roleList=\"roleList\"\r\n                :rules=\"rules\"\r\n                :token=\"token\"\r\n                :modalFormData=\"modalFormData\"\r\n                :categoryList=\"categoryList\"\r\n                :selectOptions='selectOptions'\r\n                :handleUploadChange=\"handleUploadChange\"\r\n                :handleUploadRequest=\"handleUploadRequest\"\r\n                ref=\"form\" />\r\n      <div slot=\"footer\"\r\n           class=\"dialog-footer\">\r\n        <el-button @click=\"closeModal\">取 消</el-button>\r\n        <el-button type=\"primary\"\r\n                   @click=\"submit\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport store from \"store\"\r\nimport MODAL_FORM_DATA from '@/config/modalForm.config'\r\nimport VALIDATE_DATA from '@/config/validate.config'\r\nimport BaseForm from \"components/base/BaseForm\"\r\nimport { dynamicRoutes } from \"@/router/index\"\r\nimport { createNamespacedHelpers } from 'vuex'\r\nconst { mapState, mapActions } = createNamespacedHelpers('modal')\r\nimport { Message } from 'element-ui'\r\nexport default {\r\n  name: 'BaseModal',\r\n  components: {\r\n    BaseForm\r\n  },\r\n  data() {\r\n    return {\r\n      form: {},\r\n      selectOptions: {},\r\n      categoryList: [],\r\n      firstCategory: [],\r\n      secondCategory: [],\r\n      thirdCategory: [],\r\n      roleList: [],\r\n      axiosResult: {},\r\n      productFormData: new FormData()\r\n    }\r\n  },\r\n  created() {\r\n    this.$bus.$on('transmitFormData', data => {\r\n      this.form = data\r\n    })\r\n    this.$bus.$on('formatSelectOptions', data => {\r\n      this.formatSelectOptions(data || this.categoryList)\r\n    })\r\n  },\r\n  watch: {\r\n    async type(type) {\r\n      if (type.includes('User')) {\r\n        let result = await this.$axios('getRoleList')\r\n        this.roleList = result.data.roleList\r\n      }\r\n      if (['addProduct', 'editProduct'].includes(type)) {\r\n        let result = await this.$axios('getProductsCategory')\r\n        this.categoryList = result.data.result\r\n      }\r\n    },\r\n    isShow(val) {\r\n      if (!val) {\r\n        this.$bus.$on('formatSelectOptions', data => {\r\n          this.formatSelectOptions(data || this.categoryList)\r\n        })\r\n        let tree\r\n        if (this.type.includes('Role')) {\r\n          tree = this.$refs['form'].$refs['tree'][0]\r\n          tree.setCheckedKeys([])\r\n        }\r\n        this.form = {}\r\n        this.$bus.$on('transmitFormData', data => {\r\n          this.form = data\r\n          if (tree) tree.setCheckedKeys(data.roleAuth)\r\n        })\r\n        this.productFormData = new FormData()\r\n        if (this.type.includes(\"addProduct\")) this.$refs[\"form\"].$refs[\"upload\"][0].uploadFiles = []\r\n      } else {\r\n        this.$bus.$off('transmitFormData')\r\n        this.$bus.$off('formatSelectOptions')\r\n      }\r\n    },\r\n    form: {\r\n      handler: function(newVal) {\r\n        if (this.$route.path === \"/productsclassify\") {\r\n          let existFirstCategory = this.firstCategory.filter(item => item.categoryName === this.form.firstCategory)\r\n          if (existFirstCategory.length === 0) {\r\n            this.secondCategory = []\r\n            this.thirdCategory = []\r\n          }\r\n          this.categoryList.filter(item => {\r\n            if (newVal.firstCategory === item.categoryName) {\r\n              this.secondCategory = item.child.reduce((acc, curr) => {\r\n                acc.push({\r\n                  categoryName: curr.categoryName,\r\n                  id: curr?.id,\r\n                  rootName: curr?.rootName\r\n                })\r\n                return acc\r\n              }, [])\r\n              if (newVal.secondCategory) {\r\n                item.child.filter(children => {\r\n                  if (newVal.secondCategory === children.categoryName) {\r\n                    this.thirdCategory = children.child.reduce((acc, curr) => {\r\n                      acc.push({\r\n                        categoryName: curr.categoryName,\r\n                        id: curr?.id,\r\n                        parentName: curr?.parentName\r\n                      })\r\n                      return acc\r\n                    }, [])\r\n                  }\r\n                })\r\n              }\r\n            }\r\n          })\r\n          this.selectOptions = { firstCategory: this.firstCategory, secondCategory: this.secondCategory, thirdCategory: this.thirdCategory }\r\n        }\r\n      },\r\n      deep: true\r\n    },\r\n    secondCategory(newVal, oldVal) {\r\n      if (newVal[0]?.rootName !== oldVal[0]?.rootName && this.form.secondCategory) {\r\n        this.form.secondCategory = \"\"\r\n        if (this.form.thirdCategory) this.form.thirdCategory = \"\"\r\n      }\r\n      let existFirstCategory = this.firstCategory.filter(item => item.categoryName === this.form.firstCategory)\r\n      let existSecondCateory = oldVal.filter(item => item.categoryName === this.form.secondCategory)\r\n      if (existFirstCategory.length > 0 && existSecondCateory.length === 0 && this.form.secondCategory) this.thirdCategory = []\r\n    },\r\n    thirdCategory(newVal, oldVal) {\r\n      if (newVal[0]?.parentName !== oldVal[0]?.parentName && this.form.thirdCategory) this.form.thirdCategory = \"\"\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['isShow', 'type']),\r\n    title() {\r\n      return MODAL_FORM_DATA[this.type]?.title\r\n    },\r\n    treeData() {\r\n      return this.formatTreeData(dynamicRoutes)\r\n    },\r\n    rules() {\r\n      return VALIDATE_DATA\r\n    },\r\n    modalFormData() {\r\n      return MODAL_FORM_DATA[this.type]?.children\r\n    },\r\n    token() {\r\n      return store.get(process.env.VUE_APP_USER_INFO)?.token\r\n    }\r\n  },\r\n  methods: {\r\n    submit() {\r\n      if (this.type.includes('Role')) {\r\n        const tree = this.$refs['form'].$refs['tree'][0]\r\n        let checkedKeys = tree.getCheckedKeys()\r\n        this.$refs['form'].form.roleAuth = checkedKeys\r\n      }\r\n      this.$refs['form'].$refs['validateForm'].validate(async valid => {\r\n        if (valid) {\r\n          try {\r\n            if ([\"addProduct\"].includes(this.type)) {\r\n              await this.handleUploadRequest()\r\n            } else {\r\n              this.axiosResult = await this.$axios(this.type, this.$refs['form'].form)\r\n            }\r\n            if (!this.axiosResult) return false\r\n            this.$bus.$emit('changeData', this.axiosResult.data.result)\r\n            this.$bus.$emit('transmitFormData', this.axiosResult.data.result)\r\n            if (this.type === \"addProductsCategory\") this.formatSelectOptions(this.categoryList)\r\n            this.close()\r\n          } catch (error) {\r\n            console.log(error)\r\n          }\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    formatSelectOptions(data) {\r\n      this.categoryList = data\r\n      this.firstCategory = data.reduce((acc, curr) => {\r\n        acc.push({\r\n          categoryName: curr.categoryName,\r\n          id: curr?.id\r\n        })\r\n        return acc\r\n      }, [])\r\n      this.selectOptions = { firstCategory: this.firstCategory, secondCategory: this.secondCategory, thirdCategory: this.thirdCategory }\r\n    },\r\n    formatTreeData(datas) {\r\n      return datas.map(item => {\r\n        if (!item.children) {\r\n          return {\r\n            id: item.meta.id,\r\n            name: item.name\r\n          }\r\n        }\r\n        if (item.children) {\r\n          return {\r\n            id: item.meta.id,\r\n            name: item.name,\r\n            children: this.formatTreeData(item.children)\r\n          }\r\n        }\r\n      })\r\n    },\r\n    handleUploadChange(file) {\r\n      let maxSize = 5 * 1024 * 1024\r\n      if (file.size > maxSize) {\r\n        Message({\r\n          type: \"warning\",\r\n          message: \"文件不得大于5M\"\r\n        })\r\n        this.$refs[\"form\"].$refs[\"upload\"][0].handleRemove(file)\r\n        return false\r\n      }\r\n      if (!(/image/g.test(file.raw.type))) {\r\n        Message({\r\n          type: \"warning\",\r\n          message: \"只能选择图片格式的文件\"\r\n        })\r\n        this.$refs[\"form\"].$refs[\"upload\"][0].handleRemove(file)\r\n        return false\r\n      }\r\n      this.productFormData.append(\"file\", file.raw)\r\n    },\r\n    async handleUploadRequest() {\r\n      for (const key in this.$refs['form'].form) {\r\n        this.productFormData.append(key, this.$refs['form'].form[key])\r\n      }\r\n      this.axiosResult = await this.$axios(this.type, this.productFormData)\r\n    },\r\n    closeModal() {\r\n      this.$bus.$emit(\"initTableData\")\r\n      this.close()\r\n    },\r\n    ...mapActions(['close'])\r\n  },\r\n  beforeDestroy() {\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\">\r\n.dialogModal .el-dialog \r\n  max-height 70vh\r\n  overflow-y: auto\r\n  .el-dialog__header\r\n    text-align center\r\n</style>\r\n"]}]}