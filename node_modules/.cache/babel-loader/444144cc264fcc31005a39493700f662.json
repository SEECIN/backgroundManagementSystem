{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\src\\components\\base\\BaseModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\src\\components\\base\\BaseModal.vue","mtime":1662190826298},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\babel.config.js","mtime":1654661870493},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1654578877485},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\babel-loader\\lib\\index.js","mtime":1654578881393},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1654578877485},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\vue-loader\\lib\\index.js","mtime":1654578883487}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiQzovVXNlcnMvQWRtaW5pc3RyYXRvci9EZXNrdG9wL1x1NzUzNVx1NTU0Nlx1N0JBMVx1NzQwNi9iYWNrZ3JvdW5kLW1hbmFnZS1zeXN0ZW0vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3JlZ2VuZXJhdG9yUnVudGltZS5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJDOi9Vc2Vycy9BZG1pbmlzdHJhdG9yL0Rlc2t0b3AvXHU3NTM1XHU1NTQ2XHU3QkExXHU3NDA2L2JhY2tncm91bmQtbWFuYWdlLXN5c3RlbS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIkM6L1VzZXJzL0FkbWluaXN0cmF0b3IvRGVza3RvcC9cdTc1MzVcdTU1NDZcdTdCQTFcdTc0MDYvYmFja2dyb3VuZC1tYW5hZ2Utc3lzdGVtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgTU9EQUxfRk9STV9EQVRBIGZyb20gJ0AvY29uZmlnL21vZGFsRm9ybS5jb25maWcnOwppbXBvcnQgQmFzZUZvcm0gZnJvbSAiY29tcG9uZW50cy9iYXNlL0Jhc2VGb3JtIjsKaW1wb3J0IHsgY3JlYXRlTmFtZXNwYWNlZEhlbHBlcnMgfSBmcm9tICd2dWV4JzsKCnZhciBfY3JlYXRlTmFtZXNwYWNlZEhlbHAgPSBjcmVhdGVOYW1lc3BhY2VkSGVscGVycygnbW9kYWwnKSwKICAgIG1hcFN0YXRlID0gX2NyZWF0ZU5hbWVzcGFjZWRIZWxwLm1hcFN0YXRlLAogICAgbWFwQWN0aW9ucyA9IF9jcmVhdGVOYW1lc3BhY2VkSGVscC5tYXBBY3Rpb25zOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdCYXNlTW9kYWwnLAogIGNvbXBvbmVudHM6IHsKICAgIEJhc2VGb3JtOiBCYXNlRm9ybQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZvcm06IHt9CiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgdGhpcy4kYnVzLiRvbigndHJhbnNtaXRGb3JtRGF0YScsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIF90aGlzLmZvcm0gPSBkYXRhOwogICAgfSk7CiAgfSwKICB3YXRjaDogewogICAgaXNTaG93OiBmdW5jdGlvbiBpc1Nob3codmFsKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKCF2YWwpIHsKICAgICAgICB2YXIgdHJlZTsKCiAgICAgICAgaWYgKHRoaXMudHlwZS5pbmNsdWRlcygnUm9sZScpKSB7CiAgICAgICAgICB0cmVlID0gdGhpcy4kcmVmc1snZm9ybSddLiRyZWZzWyd0cmVlJ11bMF07CiAgICAgICAgICB0cmVlLnNldENoZWNrZWRLZXlzKFtdKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuZm9ybSA9IHt9OwogICAgICAgIHRoaXMuJGJ1cy4kb24oJ3RyYW5zbWl0Rm9ybURhdGEnLCBmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgX3RoaXMyLmZvcm0gPSBkYXRhOwogICAgICAgICAgaWYgKHRyZWUpIHRyZWUuc2V0Q2hlY2tlZEtleXMoZGF0YS5yb2xlQXV0aCk7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kYnVzLiRvZmYoJ3RyYW5zbWl0Rm9ybURhdGEnKTsKICAgICAgfQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoWydpc1Nob3cnLCAndHlwZSddKSksIHt9LCB7CiAgICB0aXRsZTogZnVuY3Rpb24gdGl0bGUoKSB7CiAgICAgIHZhciBfTU9EQUxfRk9STV9EQVRBJHRoaXM7CgogICAgICByZXR1cm4gKF9NT0RBTF9GT1JNX0RBVEEkdGhpcyA9IE1PREFMX0ZPUk1fREFUQVt0aGlzLnR5cGVdKSA9PT0gbnVsbCB8fCBfTU9EQUxfRk9STV9EQVRBJHRoaXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9NT0RBTF9GT1JNX0RBVEEkdGhpcy50aXRsZTsKICAgIH0KICB9KSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKHsKICAgIHN1Ym1pdDogZnVuY3Rpb24gc3VibWl0KCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIGlmICh0aGlzLnR5cGUuaW5jbHVkZXMoJ1JvbGUnKSkgewogICAgICAgIHZhciB0cmVlID0gdGhpcy4kcmVmc1snZm9ybSddLiRyZWZzWyd0cmVlJ11bMF07CiAgICAgICAgdmFyIGNoZWNrZWRLZXlzID0gdHJlZS5nZXRDaGVja2VkS2V5cygpOwogICAgICAgIHRoaXMuJHJlZnNbJ2Zvcm0nXS5mb3JtLnJvbGVBdXRoID0gY2hlY2tlZEtleXM7CiAgICAgIH0KCiAgICAgIHRoaXMuJHJlZnNbJ2Zvcm0nXS4kcmVmc1sndmFsaWRhdGVGb3JtJ10udmFsaWRhdGUoIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUodmFsaWQpIHsKICAgICAgICAgIHZhciByZXN1bHQ7CiAgICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgIGlmICghdmFsaWQpIHsKICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTk7CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxOwogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMy4kYXhpb3MoX3RoaXMzLnR5cGUsIF90aGlzMy4kcmVmc1snZm9ybSddLmZvcm0pOwoKICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgICAgcmVzdWx0ID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQpIHsKICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgZmFsc2UpOwoKICAgICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgICAgX3RoaXMzLiRyZWZzWydmb3JtJ10uJHJlZnNbJ3ZhbGlkYXRlRm9ybSddLnJlc2V0RmllbGRzKCk7CgogICAgICAgICAgICAgICAgICBfdGhpczMuJGJ1cy4kZW1pdCgnY2hhbmdlRGF0YScsIHJlc3VsdC5kYXRhLnJlc3VsdCk7CgogICAgICAgICAgICAgICAgICBfdGhpczMuJGJ1cy4kZW1pdCgndHJhbnNtaXRGb3JtRGF0YScsIHJlc3VsdC5kYXRhLnJlc3VsdCk7CgogICAgICAgICAgICAgICAgICBfdGhpczMuY2xvc2UoKTsKCiAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNzsKICAgICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEzOwogICAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgICAgICBfdGhpczMuJHJlZnNbJ2Zvcm0nXS5mb3JtLnBhc3N3b3JkID0gJyc7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjA7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgIGNhc2UgMTk6CiAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIGZhbHNlKTsKCiAgICAgICAgICAgICAgICBjYXNlIDIwOgogICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMSwgMTNdXSk7CiAgICAgICAgfSkpOwoKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgIH07CiAgICAgIH0oKSk7CiAgICB9CiAgfSwgbWFwQWN0aW9ucyhbJ2Nsb3NlJ10pKSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkge30KfTs="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;;AACA;AAAA;AAAA;;AACA;EACAA,iBADA;EAEAC;IACAC;EADA,CAFA;EAKAC,IALA,kBAKA;IACA;MACAC;IADA;EAGA,CATA;EAUAC,OAVA,qBAUA;IAAA;;IACA;MACA;IACA,CAFA;EAGA,CAdA;EAeAC;IACAC,MADA,kBACAC,GADA,EACA;MAAA;;MACA;QACA;;QACA;UACAC;UACAA;QACA;;QACA;QACA;UACA;UACA;QACA,CAHA;MAIA,CAXA,MAWA;QACA;MACA;IACA;EAhBA,CAfA;EAiCAC,0CACAC,4BADA;IAEAC,KAFA,mBAEA;MAAA;;MACA;IACA;EAJA,EAjCA;EAuCAC;IACAC,MADA,oBACA;MAAA;;MACA;QACA;QACA;QACA;MACA;;MACA;QAAA;UAAA;UAAA;YAAA;cAAA;gBAAA;kBAAA,KACAC,KADA;oBAAA;oBAAA;kBAAA;;kBAAA;kBAAA;kBAAA,OAGA,qDAHA;;gBAAA;kBAGAC,MAHA;;kBAAA,IAIAA,MAJA;oBAAA;oBAAA;kBAAA;;kBAAA,iCAIA,KAJA;;gBAAA;kBAKA;;kBACA;;kBACA;;kBACA;;kBARA;kBAAA;;gBAAA;kBAAA;kBAAA;kBAUA;kBACAC;;gBAXA;kBAAA;kBAAA;;gBAAA;kBAAA,iCAcA,KAdA;;gBAAA;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA;;QAAA;UAAA;QAAA;MAAA;IAiBA;EAxBA,GAyBAC,qBAzBA,CAvCA;EAkEAC,aAlEA,2BAkEA,CAEA;AApEA","names":["name","components","BaseForm","data","form","created","watch","isShow","val","tree","computed","mapState","title","methods","submit","valid","result","console","mapActions","beforeDestroy"],"sourceRoot":"src/components/base","sources":["BaseModal.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-dialog class=\"dialogModal\"\r\n               :title=\"title\"\r\n               :show-close=\"false\"\r\n               :visible=\"isShow\">\r\n      <BaseForm :type=\"type\"\r\n                :form='form'\r\n                ref=\"form\" />\r\n      <div slot=\"footer\"\r\n           class=\"dialog-footer\">\r\n        <el-button @click=\"close\">取 消</el-button>\r\n        <el-button type=\"primary\"\r\n                   @click=\"submit\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MODAL_FORM_DATA from '@/config/modalForm.config'\r\nimport BaseForm from \"components/base/BaseForm\"\r\nimport { createNamespacedHelpers } from 'vuex'\r\nconst { mapState, mapActions } = createNamespacedHelpers('modal')\r\nexport default {\r\n  name: 'BaseModal',\r\n  components: {\r\n    BaseForm\r\n  },\r\n  data() {\r\n    return {\r\n      form: {}\r\n    }\r\n  },\r\n  created() {\r\n    this.$bus.$on('transmitFormData', data => {\r\n      this.form = data\r\n    })\r\n  },\r\n  watch: {\r\n    isShow(val) {\r\n      if (!val) {\r\n        let tree\r\n        if (this.type.includes('Role')) {\r\n          tree = this.$refs['form'].$refs['tree'][0]\r\n          tree.setCheckedKeys([])\r\n        }\r\n        this.form = {}\r\n        this.$bus.$on('transmitFormData', data => {\r\n          this.form = data\r\n          if (tree) tree.setCheckedKeys(data.roleAuth)\r\n        })\r\n      } else {\r\n        this.$bus.$off('transmitFormData')\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['isShow', 'type']),\r\n    title() {\r\n      return MODAL_FORM_DATA[this.type]?.title\r\n    }\r\n  },\r\n  methods: {\r\n    submit() {\r\n      if (this.type.includes('Role')) {\r\n        const tree = this.$refs['form'].$refs['tree'][0]\r\n        let checkedKeys = tree.getCheckedKeys()\r\n        this.$refs['form'].form.roleAuth = checkedKeys\r\n      }\r\n      this.$refs['form'].$refs['validateForm'].validate(async valid => {\r\n        if (valid) {\r\n          try {\r\n            let result = await this.$axios(this.type, this.$refs['form'].form)\r\n            if (!result) return false\r\n            this.$refs['form'].$refs['validateForm'].resetFields()\r\n            this.$bus.$emit('changeData', result.data.result)\r\n            this.$bus.$emit('transmitFormData', result.data.result)\r\n            this.close()\r\n          } catch (error) {\r\n            this.$refs['form'].form.password = ''\r\n            console.log(error)\r\n          }\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    ...mapActions(['close'])\r\n  },\r\n  beforeDestroy() {\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\">\r\n.dialogModal .el-dialog \r\n  max-height 70vh\r\n  overflow-y: auto\r\n  .el-dialog__header\r\n    text-align center\r\n</style>\r\n"]}]}