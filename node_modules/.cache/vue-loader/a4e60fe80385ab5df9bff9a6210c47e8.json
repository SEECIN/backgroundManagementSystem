{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\src\\components\\main-content\\index.vue?vue&type=style&index=0&id=d7f13690&lang=stylus&scoped=true&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\src\\components\\main-content\\index.vue","mtime":1664285503803},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\css-loader\\dist\\cjs.js","mtime":1654578879614},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1654578885082},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\postcss-loader\\src\\index.js","mtime":1654578881377},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\stylus-loader\\index.js","mtime":1654667144069},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1654578877485},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\vue-loader\\lib\\index.js","mtime":1654578883487}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmNvbnRlbnQNCiAgZmxleCAxDQogIHBvc2l0aW9uIHJlbGF0aXZlDQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/main-content","sourcesContent":["<template>\r\n  <div class=\"content\">\r\n    <ContentHead :contentHead=\"datas.contentHead\"\r\n                 v-if=\"datas.contentHead\" />\r\n    <Table :tableData=\"tableData\" />\r\n    <Pagination v-if=\"datas.needPagination\"\r\n                :handleSizeChange=\"handleSizeChange\"\r\n                :handleCurrentChange=\"handleCurrentChange\"\r\n                :paginationData=\"paginationData\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ContentHead from \"components/main-content/component/ContentHead\"\r\nimport Table from \"components/main-content/component/Table\"\r\nimport Pagination from \"components/main-content/component/Pagination\"\r\nexport default {\r\n  name: 'index',\r\n  components: {\r\n    ContentHead, Table, Pagination\r\n  },\r\n  props: {\r\n    datas: {\r\n      type: Object\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isSearch: false,\r\n      searchData: [],\r\n      tableData: [],\r\n      paginationData: {\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: 2\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.init()\r\n    this.$bus.$on('changeData', (data, type) => {\r\n      let idx = this.datas.tableContentData.findIndex(item => item.id === data.id)\r\n      if (idx !== -1) {\r\n        if (type && type.includes('delete')) {\r\n          this.datas.tableContentData.splice(idx, 1)\r\n          let len = this.datas.tableContentData.length\r\n          if (len % 2 === 0 && this.paginationData.currentPage !== 1) {\r\n            this.paginationData.currentPage--\r\n          }\r\n        } else {\r\n          this.datas.tableContentData.splice(idx, 1, data)\r\n        }\r\n      } else {\r\n        this.datas.tableContentData.push(data)\r\n      }\r\n      this.init()\r\n    })\r\n  },\r\n  mounted() {\r\n    this.$bus.$on(\"search\", (val) => {\r\n      this.isSearch = true\r\n      this.searchData = this.datas.tableContentData.filter(item => {\r\n        for (let curr of Object.values(item)) {\r\n          if (String(curr).search(val) !== -1) {\r\n            return item\r\n          }\r\n        }\r\n      })\r\n      this.paginationData.total = this.searchData?.length\r\n      this.handleSizeChange(this.paginationData.pageSize)\r\n    })\r\n\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.tableData = this.datas.tableContentData\r\n      this.paginationData.total = this.datas.tableContentData?.length\r\n      this.handleCurrentChange(this.paginationData.currentPage)\r\n    },\r\n    handleSizeChange(size) {\r\n      if (this.datas.needPagination) {\r\n        this.paginationData.pageSize = size\r\n        let start = (this.paginationData.currentPage - 1) * size\r\n        let end = this.paginationData.currentPage * size\r\n        this.tableData = this.isSearch ? this.searchData.slice(start, end) : this.datas.tableContentData.slice(start, end)\r\n      }\r\n    },\r\n    handleCurrentChange(current) {\r\n      if (this.datas.needPagination) {\r\n        this.paginationData.currentPage = current\r\n        this.handleSizeChange(this.paginationData.pageSize)\r\n      }\r\n    }\r\n  },\r\n  beforeDestroy() {\r\n    this.$bus.$off('changeData')\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n.content\r\n  flex 1\r\n  position relative\r\n</style>\r\n"]}]}