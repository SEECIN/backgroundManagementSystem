{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\src\\components\\base\\BaseModal.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\src\\components\\base\\BaseModal.vue","mtime":1662190826298},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\css-loader\\dist\\cjs.js","mtime":1654578879614},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1654578885082},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\postcss-loader\\src\\index.js","mtime":1654578881377},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\stylus-loader\\index.js","mtime":1654667144069},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1654578877485},{"path":"C:\\Users\\Administrator\\Desktop\\电商管理\\background-manage-system\\node_modules\\vue-loader\\lib\\index.js","mtime":1654578883487}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZGlhbG9nTW9kYWwgLmVsLWRpYWxvZyANCiAgbWF4LWhlaWdodCA3MHZoDQogIG92ZXJmbG93LXk6IGF1dG8NCiAgLmVsLWRpYWxvZ19faGVhZGVyDQogICAgdGV4dC1hbGlnbiBjZW50ZXINCg=="},{"version":3,"sources":["BaseModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;AACA;AACA","file":"BaseModal.vue","sourceRoot":"src/components/base","sourcesContent":["<template>\r\n  <div>\r\n    <el-dialog class=\"dialogModal\"\r\n               :title=\"title\"\r\n               :show-close=\"false\"\r\n               :visible=\"isShow\">\r\n      <BaseForm :type=\"type\"\r\n                :form='form'\r\n                ref=\"form\" />\r\n      <div slot=\"footer\"\r\n           class=\"dialog-footer\">\r\n        <el-button @click=\"close\">取 消</el-button>\r\n        <el-button type=\"primary\"\r\n                   @click=\"submit\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MODAL_FORM_DATA from '@/config/modalForm.config'\r\nimport BaseForm from \"components/base/BaseForm\"\r\nimport { createNamespacedHelpers } from 'vuex'\r\nconst { mapState, mapActions } = createNamespacedHelpers('modal')\r\nexport default {\r\n  name: 'BaseModal',\r\n  components: {\r\n    BaseForm\r\n  },\r\n  data() {\r\n    return {\r\n      form: {}\r\n    }\r\n  },\r\n  created() {\r\n    this.$bus.$on('transmitFormData', data => {\r\n      this.form = data\r\n    })\r\n  },\r\n  watch: {\r\n    isShow(val) {\r\n      if (!val) {\r\n        let tree\r\n        if (this.type.includes('Role')) {\r\n          tree = this.$refs['form'].$refs['tree'][0]\r\n          tree.setCheckedKeys([])\r\n        }\r\n        this.form = {}\r\n        this.$bus.$on('transmitFormData', data => {\r\n          this.form = data\r\n          if (tree) tree.setCheckedKeys(data.roleAuth)\r\n        })\r\n      } else {\r\n        this.$bus.$off('transmitFormData')\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['isShow', 'type']),\r\n    title() {\r\n      return MODAL_FORM_DATA[this.type]?.title\r\n    }\r\n  },\r\n  methods: {\r\n    submit() {\r\n      if (this.type.includes('Role')) {\r\n        const tree = this.$refs['form'].$refs['tree'][0]\r\n        let checkedKeys = tree.getCheckedKeys()\r\n        this.$refs['form'].form.roleAuth = checkedKeys\r\n      }\r\n      this.$refs['form'].$refs['validateForm'].validate(async valid => {\r\n        if (valid) {\r\n          try {\r\n            let result = await this.$axios(this.type, this.$refs['form'].form)\r\n            if (!result) return false\r\n            this.$refs['form'].$refs['validateForm'].resetFields()\r\n            this.$bus.$emit('changeData', result.data.result)\r\n            this.$bus.$emit('transmitFormData', result.data.result)\r\n            this.close()\r\n          } catch (error) {\r\n            this.$refs['form'].form.password = ''\r\n            console.log(error)\r\n          }\r\n        } else {\r\n          return false\r\n        }\r\n      })\r\n    },\r\n    ...mapActions(['close'])\r\n  },\r\n  beforeDestroy() {\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\">\r\n.dialogModal .el-dialog \r\n  max-height 70vh\r\n  overflow-y: auto\r\n  .el-dialog__header\r\n    text-align center\r\n</style>\r\n"]}]}